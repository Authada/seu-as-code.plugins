dependencies {
    compile gradleApi()
    compile 'org.codehaus.groovy:groovy-all:2.3.10'

	compile 'org.codehaus.groovy.modules.scriptom:scriptom:1.6.0'
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
	
    compile 'org.mapdb:mapdb:1.0.5'
    compile 'com.h2database:h2:1.3.176'

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.3'
	testCompile 'org.hamcrest:hamcrest-library:1.3'
    testRuntime 'cglib:cglib-nodep:3.1'    
    testRuntime 'org.objenesis:objenesis:2.1'
    testCompile 'com.athaydes:spock-reports:1.2.5'
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/test"
}
processTestResources.dependsOn copyTestResources

def pomConfig = {
    name project.name
    description project.description
    url project.websiteUrl
    inceptionYear '2015'

    scm {
        connection "scm:git:${project.scmUrl}"
        developerConnection "scm:git:${project.scmUrl}"
        url project.websiteUrl
    }

    issueManagement {
        system 'GitHub'
        url project.issueTrackerUrl
    }

    licenses {
        license([:]) {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }

    organisation {
        name 'QAware GmbH'
        url 'https://www.qaware.de'
    }

    developers {
        developer {
            id 'lreimer'
            name 'Mario-Leander Reimer'
            email 'mario-leander.reimer@qaware.de'
            organization 'QAware GmbH'
            roles { role 'Developer' }
        }
    }
}

publishing {
    publications {
        basePlugin(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                asNode().children().last() + pomConfig
            }
        }
    }
}

// 'bintrayUsername' and 'bintrayApiKey' must defined in the ~/.gradle/gradle.properties
// or on the command line via -P options
if (!project.hasProperty('bintrayUsername')) ext.bintrayUsername = 'unknown'
if (!project.hasProperty('bintrayApiKey')) ext.bintrayApiKey = 'unknown'

bintray {
    user = project.bintrayUsername
    key = project.bintrayApiKey
    publications = ['basePlugin']
    pkg {
        repo = project.bintrayRepo
        name = project.name
        desc = project.description
        licenses = ['Apache-2.0']
        labels = ['gradle', 'plugin', 'base', 'seu-as-code']
        websiteUrl = project.websiteUrl
        issueTrackerUrl = project.issueTrackerUrl
        vcsUrl = project.scmUrl
        publicDownloadNumbers = true
        version {
            name = project.version
            released = new Date()
            vcsTag = project.version
            attributes = [
                    'gradle-plugin': ['de.qaware.seu.as.code.base', project.group, project.name].join(':')
            ]
        }
    }
}
